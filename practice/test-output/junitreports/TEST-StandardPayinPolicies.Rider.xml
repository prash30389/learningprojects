<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="360NDCLP153" failures="0" tests="18" name="StandardPayinPolicies.Rider" time="503.527" errors="2" timestamp="2020-12-14T20:02:09 IST" skipped="6">
  <testcase classname="StandardPayinPolicies.Rider" name="createAddRiderPolicyForNewBusinessUsingRazorPay" time="0.184">
    <error message="E:\eclipse-workspace\practice\SchemeJson_Retail\rider.json (The system cannot find the path specified)" type="java.io.FileNotFoundException">
      <![CDATA[java.io.FileNotFoundException: E:\eclipse-workspace\practice\SchemeJson_Retail\rider.json (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:212)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:154)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:109)
at java.base/java.io.FileReader.<init>(FileReader.java:60)
at practice.utility.ProposalRequest.riderCode(ProposalRequest.java:918)
at StandardPayinPolicies.Rider.createAddRiderPolicyForNewBusinessUsingRazorPay(Rider.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- createAddRiderPolicyForNewBusinessUsingRazorPay -->
  <system-out>
<p>
******** Test Scenario  :  Create Add Rider Policy in Inforce State ******
</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="SurrenderRiderPolicyForNewBusinessUsingRazorPay" time="0.002">
    <error message="E:\eclipse-workspace\practice\SchemeJson_Retail\rider.json (The system cannot find the path specified)" type="java.io.FileNotFoundException">
      <![CDATA[java.io.FileNotFoundException: E:\eclipse-workspace\practice\SchemeJson_Retail\rider.json (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:212)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:154)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:109)
at java.base/java.io.FileReader.<init>(FileReader.java:60)
at practice.utility.ProposalRequest.SurrenderRiderCode(ProposalRequest.java:808)
at StandardPayinPolicies.Rider.SurrenderRiderPolicyForNewBusinessUsingRazorPay(Rider.java:236)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- SurrenderRiderPolicyForNewBusinessUsingRazorPay -->
  <system-out>
<p>
******** Test Scenario  :  Create Add Rider Policy in Inforce State ******
</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyPaymentEventsRazorpaySR" time="0.000">
    <skipped/>
  </testcase> <!-- verifyPaymentEventsRazorpaySR -->
  <system-out/>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyVendorCodeNotEmptySR" time="46.981"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when Vendor Code is Empty.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Get Policy Payment amt for NB.**********************************</p> <p>
***** To get installment Premium from getNBQuotation API method Started *****
</p> <p>Amount to pay : 591.0</p> <p>
 installment Premium Returned *****
</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Provided vendor code is not available"}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyMandatoryFieldsInPaymentRequestSR" time="44.088"/>
  <system-out>
<p>
******** Test Scenario : Verify mobile Number and email mandatory in payment request if vendor code is RAZORPAY.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Get Policy Payment amt for NB.**********************************</p> <p>
***** To get installment Premium from getNBQuotation API method Started *****
</p> <p>Amount to pay : 566.0</p> <p>
 installment Premium Returned *****
</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Email or MobileNumber can not be empty"}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotZeroForCCSIMandateTypeSR" time="37.543"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when mandate type other than eMandate Payment and payment amount is zero.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Set Policy Payment amt Zero.**********************************</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Payment amount should be greater than INR 0."}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotGreaterThanZeroForeMandateTypeSR" time="37.347"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when mandate type eMandate Payment and payment amount is greater than zero.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Set Policy Payment amt Zero.**********************************</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":null,"message":"E-mandate amount should be INR 0."}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="SurrenderPolicyForNewBusinessUsingRazorPay" time="169.346"/>
  <system-out>
<p>
******** Test Scenario  :  Create Add Rider Policy in Inforce State ******
</p> <p>
++++++++++ CODE method of Create Sample data for policy  ++++++++++
</p> <p>
***** Sample data for USER & POLICY HOLDER Started *****
</p> <p>
 Sample user name created for user 
</p> <p>
 Sample partyrefid created for user 
</p> <p>
 Sample mobile No created for user 
</p> <p>
 Sample DOB created for user 
</p> <p>
 Sample email ID created for user 
</p> <p>
 Sample PAN card created for user 
</p> <p>
 Sample user name created for policy holder 
</p> <p>
 Sample partyrefid created for policy Holder 
</p> <p>
 Sample mobile number created for policy holder 
</p> <p>
 Sample DOB created for policy holder 
</p> <p>
 Sample policy holder identityInfo created 
</p> <p>
 Sample PAN card created for policy holder 
</p> <p>
 policy number created 
</p> <p>
 policy purchaseDateTime created 
</p> <p>
 policy startDateTime created 
</p> <p>
 policy dispatchDateTime created 
</p> <p>
***** Sample Data for policy created *****
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Get Policy Payment amt for NB.**********************************</p> <p>
***** To get installment Premium from getNBQuotation API method Started *****
</p> <p>Amount to pay : 615.0</p> <p>
 installment Premium Returned *****
</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :200</p> <p>Initiate Payment response body	: {"payment":{"id":262621,"businessId":"NBTR1412200000262621","paymentDateTime":null,"amount":1115.0,"vendorPayment":{"vendorCode":"RAZORPAY","vendorOrderId":"order_GCx3c5ZvcVH6ES","paymentId":null},"status":"INITIATED","paymentMode":null,"receiptDocId":null,"pasUpdatedOn":null,"card":null,"cheque":null,"demandDraft":null,"fundTransfer":null,"micrNumber":null,"ifscCode":null,"bankName":null,"userId":"SYSTEM","branchName":null,"branchCode":null,"transactionId":null,"processInstanceId":null,"accountNumber":null,"paymentMethod":"PAYMENTGATEWAY"},"payer":{"id":253092,"name":"Test User","email":"ankitk@360logica.com","mobileNumber":"6660060198","policyNumber":"ALI0QAP13673456","vendorPayer":{"vendorCode":"RAZORPAY","payerId":"cust_EpvAB2ochO5IEb"},"status":null},"bill":{"id":350737,"policyNumber":"ALI0QAP13673456","dueDate":"2020-12-24","amount":1115.0,"type":"NB","status":"GENERATED","product":{"type":"Term","schemeCode":"ARMP0000111"},"businessId":"NBORALI0QAP1367345600350737","amountPayable":1115.0,"serviceRequestId":null,"createdOn":"2020-12-14"},"receiptDocUrl":null,"anyTimeSiRegistered":false}</p> <p>Status Code						: 200</p> <p>Payment initiated.</p> <p>*********Get Mandate Status for Policy Number.*******************</p> <p>*********************Payment checkout for New Business (NB).**********************************</p> <p>Selected Payment Type is Card.</p> <p>*********************Verify Payment Info for New Business (NB).**********************************</p> <p>Final Payment done.</p> <p>response of payment info	: {"paymentModeDescription":"Card","vendorOrderId":"order_GCx3c5ZvcVH6ES","dueDate":"2020-12-24","businessId":"NBTR1412200000262621","policyNumber":"ALI0QAP13673456","ddDate":null,"bankName":null,"ddNumber":null,"chequeNumber":null,"createdOn":"2020-12-14","isMandateRegistered":true,"paymentType":"New Business","vendorCode":"RAZORPAY","ddType":null,"id":262621,"processInstanceId":null,"amount":1115.0,"paymentReceivedDate":"2020-12-14T14:24:59.000+0000","paymentMode":"cc","branchName":null,"receiptDocId":null,"chequeDate":null,"branchCode":null,"chequeType":null,"billBusinessId":"NBORALI0QAP1367345600350737","vendorTransactionId":"pay_GCx4XRNiLxz9EE","status":"SUCCESSFUL"}</p> <p>Manadte Registration is : true</p> <p>Payment Mode, Due Date and Amount values are	: Card || 2020-12-24 || 1115.0</p> <p>verify Policy is in 'INFORCE' Status for Standard decision=>ALI0QAP13673456</p> <p>GET -> Policy Number : The status code is: 200</p> <p>Policy status : INFORCE</p> <p>***********Check Suspense entry for NB type.************</p> <p>Suspense done.</p> <p>[{"policyNumber":"ALI0QAP13673456","amount":0.00,"suspenseType":"NB"},{"policyNumber":"ALI0QAP13673456","amount":500.00,"suspenseType":"RENEWAL"},{"policyNumber":"ALI0QAP13673456","amount":0,"suspenseType":"PAYOUT"},{"policyNumber":"ALI0QAP13673456","amount":0,"suspenseType":"REINSTATEMENT"},{"policyNumber":"ALI0QAP13673456","amount":0,"suspenseType":"AR"}]</p> <p>Suspense Status : 0.0 || 500.0 || 0.0 || 0.0 || 0</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyPaymentEventsRazorpaySP" time="5.635"/>
  <system-out>
<p>*************Check events in dynamodb.************</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyVendorCodeNotEmptySP" time="43.877"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when Vendor Code is Empty.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Get Policy Payment amt for NB.**********************************</p> <p>
***** To get installment Premium from getNBQuotation API method Started *****
</p> <p>Amount to pay : 566.0</p> <p>
 installment Premium Returned *****
</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Provided vendor code is not available"}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyMandatoryFieldsInPaymentRequestSP" time="43.862"/>
  <system-out>
<p>
******** Test Scenario : Verify mobile Number and email mandatory in payment request if vendor code is RAZORPAY.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Get Policy Payment amt for NB.**********************************</p> <p>
***** To get installment Premium from getNBQuotation API method Started *****
</p> <p>Amount to pay : 461.0</p> <p>
 installment Premium Returned *****
</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Email or MobileNumber can not be empty"}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotZeroForCCSIMandateTypeSP" time="37.472"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when mandate type other than eMandate Payment and payment amount is zero.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Set Policy Payment amt Zero.**********************************</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":"SPG402","message":"Payment amount should be greater than INR 0."}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotGreaterThanZeroForeMandateTypeSP" time="37.190"/>
  <system-out>
<p>
******** Test Scenario  :  Verify Error throws when mandate type eMandate Payment and payment amount is greater than zero.**********
</p> <p>Status     : 200</p> <p>Response   : {"code":"PROP100","desc":"Proposal Accepted","errorMessage":null}</p> <p>*********************Set Policy Payment amt Zero.**********************************</p> <p>*********************Payment initiate.**********************************</p> <p>status code   :400</p> <p>Initiate Payment response body	: {"status":"FAILED","errors":[{"code":null,"message":"E-mandate amount should be INR 0."}]}</p>  </system-out>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyMandatoryFieldsInPaymentRequest">
    <skipped/>
  </testcase> <!-- verifyMandatoryFieldsInPaymentRequest -->
  <system-out/>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotGreaterThanZeroForeMandateType">
    <skipped/>
  </testcase> <!-- verifyRequestAmountCannotGreaterThanZeroForeMandateType -->
  <system-out/>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyPaymentEventsRazorpay">
    <skipped/>
  </testcase> <!-- verifyPaymentEventsRazorpay -->
  <system-out/>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyVendorCodeNotEmpty">
    <skipped/>
  </testcase> <!-- verifyVendorCodeNotEmpty -->
  <system-out/>
  <testcase classname="StandardPayinPolicies.Rider" name="verifyRequestAmountCannotZeroForCCSIMandateType">
    <skipped/>
  </testcase> <!-- verifyRequestAmountCannotZeroForCCSIMandateType -->
  <system-out/>
</testsuite> <!-- StandardPayinPolicies.Rider -->
